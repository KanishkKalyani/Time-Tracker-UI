{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kanishk/Documents/kanishk-swiggy-time-tracking/src/tracker.jsx\";\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst Tracker = () => /*#__PURE__*/_jsxDEV(Query, {\n  query: gql`\n      {\n         allCourses {\n            id\n            title\n            author\n            description\n            topic\n            url\n         }\n      }\n   `,\n  children: ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 27\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this);\n    return data.allCourses.map(({\n      id,\n      title,\n      author,\n      description,\n      topic,\n      url\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${title} by ${author}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this));\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 4\n}, this);\n\n_c = Tracker;\nexport default Tracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracker\");","map":{"version":3,"sources":["/Users/kanishk/Documents/kanishk-swiggy-time-tracking/src/tracker.jsx"],"names":["React","Query","gql","Tracker","loading","error","data","allCourses","map","id","title","author","description","topic","url"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,OAAO,GAAG,mBACb,QAAC,KAAD;AACA,EAAA,KAAK,EAAED,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAZG;AAAA,YAcF,CAAC;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAA8B;AACzB,QAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACX,WAAOC,IAAI,CAACC,UAAL,CAAgBC,GAAhB,CAAoB,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,MAAb;AAAqBC,MAAAA,WAArB;AAAkCC,MAAAA,KAAlC;AAAyCC,MAAAA;AAAzC,KAAD,kBACzB;AAAA,6BACE;AAAA,kBAAK,GAAEJ,KAAM,OAAMC,MAAO;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,OAAUF,EAAV;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAII;AArBP;AAAA;AAAA;AAAA;AAAA,QADH;;KAAMN,O;AA0BN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst Tracker = () => (\n   <Query\n   query={gql`\n      {\n         allCourses {\n            id\n            title\n            author\n            description\n            topic\n            url\n         }\n      }\n   `}\n>\n{({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n      return data.allCourses.map(({ id, title, author, description, topic, url }) => (\n        <div key={id}>\n          <p>{`${title} by ${author}`}</p>\n        </div>\n      ));}}\n</Query>\n);\n\nexport default Tracker;"]},"metadata":{},"sourceType":"module"}